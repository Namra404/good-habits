import { api } from "@/lib/request.js";

/**
 * @typedef {Object} UserComic
 * @property {string} id - –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∑–∞–ø–∏—Å–∏ –æ –∫–æ–º–∏–∫—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
 * @property {string} user_id - –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
 * @property {string} comic_id - –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∫–æ–º–∏–∫—Å–∞.
 * @property {string} purchase_date - –î–∞—Ç–∞ –ø–æ–∫—É–ø–∫–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ ISO 8601.
 */

class UserComicService {
    /**
     * –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∫–æ–º–∏–∫—Å—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
     * @param {string} userId - –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
     * @returns {Promise<UserComic[]>} –ú–∞—Å—Å–∏–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∫–æ–º–∏–∫—Å–æ–≤.
     */
    static async getUserComics(userId) {
        const response = await api.get(`/user_comics/user/${userId}`);
        return response.data;
    }

    /**
     * –î–æ–±–∞–≤–∏—Ç—å –∫–æ–º–∏–∫—Å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
     * @param {UserComic} userComic - –î–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–º –∫–æ–º–∏–∫—Å–µ.
     * @returns {Promise<string>} –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Å–æ–∑–¥–∞–Ω–Ω–æ–π –∑–∞–ø–∏—Å–∏.
     */
    static async addUserComic(userComic) {
        const response = await api.post("/user_comics/", userComic);
        return response.data;
    }

    /**
     * –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å—Å—ã–ª–∫—É –Ω–∞ –∫–æ–º–∏–∫—Å —á–µ—Ä–µ–∑ Telegram-–±–æ—Ç–∞.
     * @param {string} userId - ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
     * @param {string} comicId - ID –∫–æ–º–∏–∫—Å–∞.
     * @returns {Promise<string>} –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç–ø—Ä–∞–≤–∫–µ.
     */
    static async sendComicToUser(userId, comicId) {
        const response = await api.post("/user_comics/send_comic", {}, {
            headers: {
                "user-id": userId,  // üîπ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ (user_id ‚Üí user-id)
                "comic-id": comicId  // üîπ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ (comic_id ‚Üí comic-id)
            }
        });
        return response.data;
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –∫—É–ø–∏–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–π –∫–æ–º–∏–∫—Å.
     * @param {string} userId - ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
     * @param {string} comicId - ID –∫–æ–º–∏–∫—Å–∞.
     * @returns {Promise<boolean>} –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç `true`, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∫—É–ø–∏–ª –∫–æ–º–∏–∫—Å.
     */
    static async userOwnsComic(userId, comicId) {
        const response = await api.get("/user_comics/user/comic/owns", {
            headers: {
                "user_id": userId,
                "comic_id": comicId
            }
        });
        return response.data;
    }
}

export default UserComicService;
